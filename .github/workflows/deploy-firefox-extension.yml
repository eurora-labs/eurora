name: Deploy Firefox Extension

on:
    # Manual trigger
    workflow_dispatch:
        inputs:
            channel:
                type: choice
                required: true
                description: Release channel
                default: production
                options:
                    - production
                    - beta
            version:
                type: string
                required: true
                description: Extension version (e.g., 0.1.0)

    # Trigger on tags matching extension release pattern
    push:
        tags:
            - 'extension/v*.*.*'

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        environment:
            name: firefox-addons

        steps:
            - name: Checkout code
              uses: actions/checkout@v5
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Pull Git LFS files
              run: git lfs pull

            - name: Init Node Environment
              uses: ./.github/actions/init-env-node

            - name: Install Protoc
              uses: arduino/setup-protoc@v3
              with:
                  repo-token: ${{ secrets.GITHUB_TOKEN }}

            - name: Compile Protobuf
              run: pnpm proto:typescript

            - name: Extract version from input or tag
              id: version
              shell: bash
              run: |
                  if [ "${{ github.event_name }}" == "push" ]; then
                    # Extract version from tag (e.g., extension/v0.1.0 -> 0.1.0)
                    VERSION="${GITHUB_REF#refs/tags/extension/v}"
                  else
                    VERSION="${{ github.event.inputs.version }}"
                  fi
                  echo "version=$VERSION" >> $GITHUB_OUTPUT
                  echo "Extension version: $VERSION"

            - name: Update manifest version
              shell: bash
              run: |
                  VERSION="${{ steps.version.outputs.version }}"
                  # Update version in Firefox manifest
                  sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"$VERSION\"/" extensions/firefox/manifest.json
                  echo "Updated manifest.json version to $VERSION"

            - name: Build extensions
              run: pnpm build
              env:
                  NODE_ENV: production

            - name: Replace Firefox extension ID for production
              if: github.event.inputs.channel == 'production' || github.event_name == 'push'
              shell: bash
              run: |
                  # Replace dev ID with production ID in manifest
                  sed -i 's/"id": "dev@eurora-labs.com"/"id": "{271903fe-1905-4636-b47f-6f0873dc97f8}"/' extensions/firefox/manifest.json
                  echo "Replaced extension ID with production ID"

                  # Verify the change
                  grep '"id":' extensions/firefox/manifest.json

            - name: Create Firefox extension zip
              shell: bash
              run: |
                  cd extensions/firefox
                  zip -r ../../firefox-extension.zip . -x "*.git*" -x "*.zip"
                  cd ../..
                  echo "Created firefox-extension.zip"
                  ls -lh firefox-extension.zip

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: firefox-extension-${{ steps.version.outputs.version }}
                  path: firefox-extension.zip
                  retention-days: 30

            - name: Install web-ext
              run: npm install -g web-ext

            - name: Sign and publish to Firefox Add-ons
              if: github.event.inputs.channel == 'production' || github.event_name == 'push'
              shell: bash
              env:
                  WEB_EXT_API_KEY: ${{ secrets.FIREFOX_API_KEY }}
                  WEB_EXT_API_SECRET: ${{ secrets.FIREFOX_API_SECRET }}
              run: |
                  cd extensions/firefox

                  # Sign and submit the extension
                  web-ext sign \
                    --channel=listed \
                    --api-key="$WEB_EXT_API_KEY" \
                    --api-secret="$WEB_EXT_API_SECRET" \
                    --timeout=900000

                  echo "Extension signed and submitted to Firefox Add-ons store"

            - name: Sign for beta channel
              if: github.event.inputs.channel == 'beta'
              shell: bash
              env:
                  WEB_EXT_API_KEY: ${{ secrets.FIREFOX_API_KEY }}
                  WEB_EXT_API_SECRET: ${{ secrets.FIREFOX_API_SECRET }}
              run: |
                  cd extensions/firefox

                  # Sign and submit to unlisted (beta) channel
                  web-ext sign \
                    --channel=unlisted \
                    --api-key="$WEB_EXT_API_KEY" \
                    --api-secret="$WEB_EXT_API_SECRET" \
                    --timeout=900000

                  echo "Extension signed for beta channel"

            - name: Create GitHub Release
              if: github.event_name == 'push'
              uses: softprops/action-gh-release@v1
              with:
                  files: firefox-extension.zip
                  body: |
                      Firefox Extension Release ${{ steps.version.outputs.version }}

                      This release has been automatically built and submitted to the Firefox Add-ons store.
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Notify on success
              if: success()
              run: |
                  echo "✅ Firefox extension ${{ steps.version.outputs.version }} successfully built and deployed!"

            - name: Notify on failure
              if: failure()
              run: |
                  echo "❌ Firefox extension deployment failed. Check the logs for details."
