
[workspace]
members = [
    "crates/app/eur-*",
    "crates/proto/eur-*",
    "crates/backend/eur-*",
    "crates/common/eur-*",
]
resolver = "2"

[workspace.package]
authors = ["Andre Roelofs andre@eurora-labs.com"]

[workspace.dependencies]
ferrous-llm-core = { version = "0.6.1" }
ferrous-llm = { version = "0.6.1" }
ferrous-focus = { version = "0.4.1" }

syn = "2.0" # collapse 2.0.101, 1.0.109, 1.0.109(build)
toml_edit = "0.23.3" # collapse 0.22, 0.20, 0.19
regex-syntax = "0.8" # collapse 0.8, 0.6
rustix = "1.0.8" # collapse 0.38, 1.0, 0.38(build)
indexmap = "2.11" # collapse 2.10, 1.9
bstr = "1.11.1"
insta = "1.41.1"
uuid = { version = "1.18.1", features = ["v4", "serde"] }
serde = { version = "1.0", features = ["derive"], default-features = false }
serde_json = "1.0"
serde_json_lenient = "0.2.4"
thiserror = "2.0.17"
tokio = { version = "1.46.1", default-features = false }
keyring = { version = "3.6.3", features = [
    "apple-native",
    "windows-native",
    "linux-native",
    "crypto-rust",
], default-features = false }
anyhow = "1.0.99"
parking_lot = "0.12.4"
futures = { version = "0.3.31" }
toml = "0.9.5"
tracing = "0.1.41"
tracing-subscriber = "0.3.20"
sentry = { version = "0.43.0" }
tempfile = "3.23"
rand = "0.9.2"
chrono = { version = "0.4.41", features = ["serde"] }
tonic = "0.14"
prost = "0.14"
prost-types = "0.14"
http-body = "1.0.1"
http-body-util = "0.1.3"
tonic-prost-build = "0.14"
tonic-prost = "0.14"
dirs = "6.0"
log = "0.4"
once_cell = "1.21"
tokio-stream = "0.1"
image = { version = "0.25.8", features = [
    "jpeg",
    "png",
], default-features = false }
base64 = "0.22.1"
async-trait = "0.1.89"
async_from = "0.2.0"
humantime-serde = "1.1.1"
specta = { version = "=2.0.0-rc.22" }
enum_dispatch = "0.3.13"
strum = "0.27.2"
strum_macros = "0.27.2"
posthog-rs = "0.3.7"
cfg-if = "1.0.4"

# App
eur-native-messaging = { path = "crates/app/eur-native-messaging" }
eur-secret = { path = "crates/app/eur-secret" }
eur-user = { path = "crates/app/eur-user" }
eur-tauri = { path = "crates/app/eur-tauri" }
eur-activity = { path = "crates/app/eur-activity" }
eur-personal-db = { path = "crates/app/eur-personal-db" }
eur-storage = { path = "crates/app/eur-storage" }
eur-settings = { path = "crates/app/eur-settings" }
eur-screen-position = { path = "crates/app/eur-screen-position" }
eur-vision = { path = "crates/app/eur-vision" }
eur-timeline = { path = "crates/app/eur-timeline" }
eur-encrypt = { path = "crates/app/eur-encrypt" }

# Backend
eur-prompt-service = { path = "crates/backend/eur-prompt-service" }
eur-auth-service = { path = "crates/backend/eur-auth-service" }
eur-ocr-service = { path = "crates/backend/eur-ocr-service" }
eur-remote-db = { path = "crates/backend/eur-remote-db" }
eur-monolith = { path = "crates/backend/eur-monolith" }
eur-update-service = { path = "crates/backend/eur-update-service" }

# Common
eur-auth = { path = "crates/common/eur-auth" }
eur-ocr = { path = "crates/common/eur-ocr" }
eur-eurora-provider = { path = "crates/common/eur-eurora-provider" }
eur-proto = { path = "crates/proto/eur-proto" }
eur-proto-client = { path = "crates/common/eur-proto-client" }
eur-prompt-kit = { path = "crates/common/eur-prompt-kit" }
eur-util = { path = "crates/common/eur-util" }
eur-fs = { path = "crates/common/eur-fs" }
eur-client-grpc = { path = "crates/proto/eur-client-grpc" }

[profile.release]
codegen-units = 1 # Compile crates one after another so the compiler can optimize better
lto = true        # Enables link to optimizations
opt-level = "s"   # Optimize for binary size
debug = true      # Enable debug symbols, for profiling

[profile.bench]
codegen-units = 256
lto = false
opt-level = 3

[profile.dev]
incremental = true
codegen-units = 256
overflow-checks = false

[profile.dev.package.sqlx-macros]
opt-level = 3
