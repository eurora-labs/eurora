// This file is @generated by prost-build.
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ProtoNativeYoutubeState {
    #[prost(string, tag = "1")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub url: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub title: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub transcript: ::prost::alloc::string::String,
    #[prost(float, tag = "5")]
    pub current_time: f32,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ProtoNativeYoutubeSnapshot {
    #[prost(string, tag = "1")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(float, tag = "2")]
    pub current_time: f32,
    #[prost(string, tag = "3")]
    pub video_frame_base64: ::prost::alloc::string::String,
    #[prost(int32, tag = "4")]
    pub video_frame_width: i32,
    #[prost(int32, tag = "5")]
    pub video_frame_height: i32,
    #[prost(enumeration = "super::shared::ProtoImageFormat", tag = "6")]
    pub video_frame_format: i32,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ProtoNativeArticleAsset {
    #[prost(string, tag = "1")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub content: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub text_content: ::prost::alloc::string::String,
    #[prost(string, optional, tag = "4")]
    pub selected_text: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, tag = "5")]
    pub title: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub site_name: ::prost::alloc::string::String,
    #[prost(string, tag = "7")]
    pub language: ::prost::alloc::string::String,
    #[prost(string, tag = "8")]
    pub excerpt: ::prost::alloc::string::String,
    #[prost(int32, tag = "9")]
    pub length: i32,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ProtoNativeArticleSnapshot {
    #[prost(string, tag = "1")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub highlighted_text: ::prost::alloc::string::String,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ProtoNativeTwitterState {
    #[prost(string, tag = "1")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub url: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub title: ::prost::alloc::string::String,
    /// TODO: Migrate stringified tweets to a repeated array
    ///
    /// JSON string containing array of tweet objects
    #[prost(string, tag = "4")]
    pub tweets: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub timestamp: ::prost::alloc::string::String,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ProtoNativeTwitterSnapshot {
    #[prost(string, tag = "1")]
    pub r#type: ::prost::alloc::string::String,
    /// JSON string containing array of tweet objects
    #[prost(string, tag = "2")]
    pub tweets: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub timestamp: ::prost::alloc::string::String,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum ProtoNativeStateType {
    YoutubeState = 0,
    ArticleState = 1,
    PdfState = 2,
    TwitterState = 3,
}
impl ProtoNativeStateType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::YoutubeState => "YOUTUBE_STATE",
            Self::ArticleState => "ARTICLE_STATE",
            Self::PdfState => "PDF_STATE",
            Self::TwitterState => "TWITTER_STATE",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "YOUTUBE_STATE" => Some(Self::YoutubeState),
            "ARTICLE_STATE" => Some(Self::ArticleState),
            "PDF_STATE" => Some(Self::PdfState),
            "TWITTER_STATE" => Some(Self::TwitterState),
            _ => None,
        }
    }
}
